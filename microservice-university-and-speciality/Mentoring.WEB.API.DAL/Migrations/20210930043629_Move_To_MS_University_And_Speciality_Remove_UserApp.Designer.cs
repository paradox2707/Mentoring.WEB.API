// <auto-generated />
using Mentoring.WEB.API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mentoring.WEB.API.DAL.Migrations
{
    [DbContext(typeof(UnitedAppContext))]
    [Migration("20210930043629_Move_To_MS_University_And_Speciality_Remove_UserApp")]
    partial class Move_To_MS_University_And_Speciality_Remove_UserApp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.ProfessionalDirection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessionalDirections");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Програмування"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Медицина"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Педагогіка"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Природничі науки"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Суспільні науки"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Юриспруденція"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Економіка"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Менеджмент"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Маркетинг"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Фінанси"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "Журналістика"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "Дизайн"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "Акторське мистецтво"
                        });
                });

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Вся Україна"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Захід"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Схід"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Північ"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Південь"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Центр"
                        });
                });

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.Speciality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProfessionalDirectionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionalDirectionId");

                    b.ToTable("Specialities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Національна безпека",
                            ProfessionalDirectionId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Право",
                            ProfessionalDirectionId = 6L
                        },
                        new
                        {
                            Id = 3L,
                            Name = "дизайн",
                            ProfessionalDirectionId = 12L
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Соціологія",
                            ProfessionalDirectionId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Фінанси, банківська справа та страхування",
                            ProfessionalDirectionId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Менеджмент",
                            ProfessionalDirectionId = 8L
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Маркетинг",
                            ProfessionalDirectionId = 9L
                        },
                        new
                        {
                            Id = 8L,
                            Name = "фінанси і кредит",
                            ProfessionalDirectionId = 10L
                        },
                        new
                        {
                            Id = 9L,
                            Name = "менеджмент організацій і адміністрування",
                            ProfessionalDirectionId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Name = "менеджмент зовнішньоекономічної діяльності",
                            ProfessionalDirectionId = 8L
                        });
                });

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.University", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AverageMark")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGoverment")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AverageMark = 182m,
                            IsGoverment = true,
                            Name = "Академія зовнішньої розвідки України",
                            RegionId = 2L,
                            ShortName = "AЗРУ"
                        },
                        new
                        {
                            Id = 2L,
                            AverageMark = 175m,
                            IsGoverment = true,
                            Name = "Академія праці, соціальних відносин і туризму",
                            RegionId = 2L,
                            ShortName = "АПСВТ"
                        },
                        new
                        {
                            Id = 3L,
                            AverageMark = 170m,
                            IsGoverment = false,
                            Name = "Вищий навчальний заклад \"Київська Академія перукарського мистецтва\"",
                            RegionId = 6L,
                            ShortName = "ВНЗ \"КАПМ\""
                        },
                        new
                        {
                            Id = 4L,
                            AverageMark = 180m,
                            IsGoverment = true,
                            Name = "Вищий навчальний заклад \"Київський економічний інститут менеджменту\" у формі Товариства з обмеженою відповідальністю",
                            RegionId = 6L,
                            ShortName = "КЕІМ"
                        });
                });

            modelBuilder.Entity("SpecialityUniversity", b =>
                {
                    b.Property<long>("SpecialitiesId")
                        .HasColumnType("bigint");

                    b.Property<long>("UniversitiesId")
                        .HasColumnType("bigint");

                    b.HasKey("SpecialitiesId", "UniversitiesId");

                    b.HasIndex("UniversitiesId");

                    b.ToTable("SpecialityUniversity");

                    b.HasData(
                        new
                        {
                            SpecialitiesId = 1L,
                            UniversitiesId = 1L
                        },
                        new
                        {
                            SpecialitiesId = 2L,
                            UniversitiesId = 2L
                        },
                        new
                        {
                            SpecialitiesId = 3L,
                            UniversitiesId = 2L
                        },
                        new
                        {
                            SpecialitiesId = 6L,
                            UniversitiesId = 2L
                        },
                        new
                        {
                            SpecialitiesId = 5L,
                            UniversitiesId = 4L
                        },
                        new
                        {
                            SpecialitiesId = 6L,
                            UniversitiesId = 4L
                        },
                        new
                        {
                            SpecialitiesId = 7L,
                            UniversitiesId = 4L
                        },
                        new
                        {
                            SpecialitiesId = 8L,
                            UniversitiesId = 4L
                        },
                        new
                        {
                            SpecialitiesId = 9L,
                            UniversitiesId = 4L
                        },
                        new
                        {
                            SpecialitiesId = 10L,
                            UniversitiesId = 4L
                        });
                });

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.Speciality", b =>
                {
                    b.HasOne("Mentoring.WEB.API.DAL.Entities.ProfessionalDirection", "ProfessionalDirection")
                        .WithMany("Specialities")
                        .HasForeignKey("ProfessionalDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalDirection");
                });

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.University", b =>
                {
                    b.HasOne("Mentoring.WEB.API.DAL.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SpecialityUniversity", b =>
                {
                    b.HasOne("Mentoring.WEB.API.DAL.Entities.Speciality", null)
                        .WithMany()
                        .HasForeignKey("SpecialitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mentoring.WEB.API.DAL.Entities.University", null)
                        .WithMany()
                        .HasForeignKey("UniversitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mentoring.WEB.API.DAL.Entities.ProfessionalDirection", b =>
                {
                    b.Navigation("Specialities");
                });
#pragma warning restore 612, 618
        }
    }
}
